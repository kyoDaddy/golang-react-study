{"ast":null,"code":"var _jsxFileName = \"/Users/kyou-hokim/Workspace/golang/golang-react/source-front/src/components/GraphQL.js\";\nimport React, { Component, Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class GraphQL extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      isLoaded: false,\n      error: null,\n      alert: {\n        type: \"d-none\",\n        message: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    const payload = `\n        {\n            list {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `;\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    const requestOptions = {\n      method: \"POST\",\n      body: payload,\n      headers: myHeaders\n    };\n    fetch(\"http://localhost:4000/v1/graphql/list\", requestOptions).then(response => response.json()).then(data => {\n      let theList = Object.values(data.data.list);\n      return theList;\n    }).then(theList => {\n      console.log(theList);\n      this.setState({\n        movies: theList\n      });\n    });\n  }\n\n  render() {\n    let {\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"GraphQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group\",\n        children: movies.map(m => /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"list-group-item list-group-item-action\",\n          href: \"#!\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: m.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: [\"(\", m.year, \") - \", m.runtime, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), m.description.slice(0, 100), \"...\"]\n        }, m.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kyou-hokim/Workspace/golang/golang-react/source-front/src/components/GraphQL.js"],"names":["React","Component","Fragment","GraphQL","constructor","props","state","movies","isLoaded","error","alert","type","message","componentDidMount","payload","myHeaders","Headers","append","requestOptions","method","body","headers","fetch","then","response","json","data","theList","Object","values","list","console","log","setState","render","map","m","title","year","runtime","description","slice","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE,IAHE;AAITC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,QADH;AAEHC,QAAAA,OAAO,EAAE;AAFN;AAJE,KAAb;AASH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,OAAO,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAVQ;AAYA,UAAMC,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,IAAI,EAAEN,OAFa;AAGnBO,MAAAA,OAAO,EAAEN;AAHU,KAAvB;AAMAO,IAAAA,KAAK,CAAC,uCAAD,EAA0CJ,cAA1C,CAAL,CACKK,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,UAAIC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcH,IAAI,CAACA,IAAL,CAAUI,IAAxB,CAAd;AACA,aAAOH,OAAP;AACH,KALL,EAMKJ,IANL,CAMWI,OAAD,IAAa;AACfI,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,WAAKM,QAAL,CAAc;AACV1B,QAAAA,MAAM,EAAEoB;AADE,OAAd;AAGH,KAXL;AAYH;;AAEDO,EAAAA,MAAM,GAAG;AACL,QAAI;AAAC3B,MAAAA;AAAD,QAAW,KAAKD,KAApB;AACA,wBACI,QAAC,QAAD;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKC,MAAM,CAAC4B,GAAP,CAAYC,CAAD,iBACR;AAEI,UAAA,SAAS,EAAC,wCAFd;AAGI,UAAA,IAAI,EAAC,IAHT;AAAA,kCAIQ;AAAA,sBAASA,CAAC,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,kBAJR,eAIkC;AAAA;AAAA;AAAA;AAAA,kBAJlC,eAKQ;AAAO,YAAA,SAAS,EAAC,YAAjB;AAAA,4BACMD,CAAC,CAACE,IADR,UACkBF,CAAC,CAACG,OADpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALR,eAQQ;AAAA;AAAA;AAAA;AAAA,kBARR,EASSH,CAAC,CAACI,WAAF,CAAcC,KAAd,CAAoB,CAApB,EAAuB,GAAvB,CATT;AAAA,WACSL,CAAC,CAACM,EADX;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AAzE0C","sourcesContent":["import React, { Component, Fragment } from 'react'\n\n\nexport default class GraphQL extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n            isLoaded: false,\n            error: null,\n            alert: {\n                type: \"d-none\",\n                message: \"\",\n            }\n        }\n    }\n\n    componentDidMount() {\n        const payload = `\n        {\n            list {\n                id\n                title\n                runtime\n                year\n                description\n            }\n        }\n        `\n\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        const requestOptions = {\n            method: \"POST\",\n            body: payload,\n            headers: myHeaders,\n        }\n\n        fetch(\"http://localhost:4000/v1/graphql/list\", requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                let theList = Object.values(data.data.list);\n                return theList;\n            })\n            .then((theList) => {\n                console.log(theList);\n                this.setState({\n                    movies: theList,\n                })\n            })\n    }\n\n    render() {\n        let {movies} = this.state;\n        return (\n            <Fragment>\n            <h2>GraphQL</h2>\n            <hr />\n            <div className=\"list-group\">\n                {movies.map((m) => (\n                    <a\n                        key={m.id}\n                        className=\"list-group-item list-group-item-action\"\n                        href=\"#!\">\n                            <strong>{m.title}</strong><br />\n                            <small className=\"text-muted\">\n                                ({m.year}) - {m.runtime} minutes\n                            </small>\n                            <br />\n                            {m.description.slice(0, 100)}...\n                        </a>\n                ))}\n            </div>\n            </Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}